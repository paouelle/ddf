<?xml version="1.0" encoding="UTF-8"?>
<!-- /**
 * Copyright (c) Codice Foundation
 *
 * This is free software: you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation, either
 * version 3 of the License, or any later version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU Lesser General Public License for more details. A copy of the GNU Lesser General Public License is distributed along with this program and can be found at
 * <http://www.gnu.org/licenses/lgpl.html>.
 *
 **/ -->
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0">

    <bean id="strategiesBean" class="org.codice.ddf.platform.util.SortedServiceList"/>
    <reference-list id="strategiesRefList"
                    interface="org.codice.ddf.platform.io.internal.PersistenceStrategy"
                    availability="optional">
        <reference-listener ref="strategiesBean" bind-method="bindPlugin"
                            unbind-method="unbindPlugin"/>
    </reference-list>

    <reference id="configStrategy"
               interface="org.codice.ddf.platform.io.internal.PersistenceStrategy"
               filter="(platform.io.strategy.extension=config)"
               availability="mandatory"/>

    <reference id="configAdmin"
               interface="org.codice.ddf.admin.core.api.ConfigurationAdmin"
               availability="mandatory"/>

    <reference id="osgi.configAdmin"
               interface="org.osgi.service.cm.ConfigurationAdmin"
               availability="mandatory"/>

    <reference id="encryptionService"
               interface="ddf.security.encryption.EncryptionService"
               availability="mandatory"/>

    <reference id="fabric8.resolver"
               interface="io.fabric8.karaf.core.properties.PlaceholderResolver"
               availability="mandatory"/>

    <reference id="config.mapper.service"
               interface="org.codice.ddf.admin.configuration.ConfigMappingService"
               availability="optional"/>

    <reference id="config.abstraction.service"
               interface="org.codice.ddf.admin.configuration.ConfigAbstractionAgent"
               availability="optional"/>

    <bean id="configUpdater" class="org.codice.ddf.admin.configuration.ConfigurationUpdater">
        <argument ref="configAdmin"/>
        <argument ref="strategiesBean"/>
        <argument ref="encryptionService"/>
    </bean>

    <service ref="configUpdater"
             interface="org.codice.felix.cm.internal.ConfigurationPersistencePlugin"/>


    <bean id="sorted.mapping.listeners"
          class="org.codice.ddf.platform.util.SortedServiceList"/>
    <reference-list id="mapping.listeners"
                    interface="org.codice.ddf.admin.configuration.ConfigMappingListener"
                    availability="optional">
        <reference-listener bind-method="bindPlugin" unbind-method="unbindPlugin"
                            ref="sorted.mapping.listeners"/>
    </reference-list>

    <reference-list id="abstract.listeners"
                    interface="org.codice.ddf.admin.configuration.ConfigAbstractionListener"
                    availability="optional">
        <reference-listener bind-method="bindPlugin"
                            unbind-method="unbindPlugin" ref="sorted.abstract.listeners"/>
    </reference-list>
    <bean id="sorted.abstract.listeners" class="org.codice.ddf.platform.util.SortedServiceList"/>

    <service auto-export="interfaces">
        <bean class="org.codice.ddf.admin.configuration.IfPropertiesFunction"/>
    </service>

    <service auto-export="interfaces">
        <bean class="org.codice.ddf.admin.configuration.ConfigAbstractionPropertiesFunction">
            <argument ref="config.abstraction.service"/>
        </bean>
    </service>

    <service auto-export="interfaces">
        <bean class="org.codice.ddf.admin.configuration.ConfigMappingServiceImpl"
              init-method="init">
            <argument ref="fabric8.resolver"/>
            <argument ref="sorted.mapping.listeners"/>
        </bean>
    </service>

    <service auto-export="interfaces">
        <bean class="org.codice.ddf.admin.configuration.ConfigAdminAgent"
              init-method="init">
            <argument ref="osgi.configAdmin"/>
            <argument ref="configAdmin"/>
            <argument ref="config.mapper.service"/>
        </bean>
    </service>

    <bean id="configAbstractionAgent"
          class="org.codice.ddf.admin.configuration.ConfigAbstractionAgentImpl">
        <argument ref="sorted.abstract.listeners"/>
        <argument ref="configStrategy"/>
    </bean>

    <service ref="configAbstractionAgent">
        <interfaces>
            <value>org.apache.felix.fileinstall.ArtifactListener</value>
            <value>org.apache.felix.fileinstall.ArtifactInstaller</value>
            <value>org.codice.ddf.admin.configuration.ConfigAbstractionAgent</value>
        </interfaces>
    </service>

</blueprint>